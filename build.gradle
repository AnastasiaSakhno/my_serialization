group 'com.ask'
version '1.0-SNAPSHOT'

apply plugin: 'java'

ext {
    jmhVersion = '1.0'
    kryoVersion = '4.0.0'
    protobufVersion = '3.5.1'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    jmh {
        compileClasspath += sourceSets.test.runtimeClasspath
        runtimeClasspath += sourceSets.test.runtimeClasspath
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    jmhCompile project
    jmhCompile "org.openjdk.jmh:jmh-core:${jmhVersion}"
    jmhCompile "org.openjdk.jmh:jmh-generator-annprocess:${jmhVersion}"
    jmhCompile "com.esotericsoftware:kryo:${kryoVersion}"
    jmhCompile "com.google.protobuf:protobuf-java:${protobufVersion}"
}

task jmh(type: JavaExec, description: 'Executing JMH benchmarks') {
    classpath = sourceSets.jmh.runtimeClasspath
    main = 'org.openjdk.jmh.Main'

    def include = project.properties.get('include', '');
    def format = project.properties.get('format', 'json');
    def resultFile = file("build/reports/jmh/result.${format}")
    resultFile.parentFile.mkdirs()

    args include
    args '-rf', format
    args '-rff', resultFile
}
